
@model IEnumerable<HShop2024.ViewModels.HangHoaVM>

@{
	ViewData["Title"] = "Index";
	Layout = "_DanhSachHangHoa";
}
    <style>
        .custom-alert {
            color: red; /* Màu chữ đỏ */
            font-weight: bold; /* Chữ đậm */
            padding: 10px; /* Khoảng cách giữa chữ và viền */
            margin-bottom: 20px; /* Khoảng cách dưới thông báo */
        }
    </style>

    @if (TempData["Message"] != null)
    {
        <div class="custom-alert">
            @TempData["Message"]
        </div>
    }
<!-- Single Page Header start -->
@section BreadCum {
	<div class="container-fluid page-header py-5">
		<h1 class="text-center text-white display-6">Shop</h1>
		<ol class="breadcrumb justify-content-center mb-0">
			<li class="breadcrumb-item"><a href="#">Home</a></li>
			<li class="breadcrumb-item"><a href="#">Pages</a></li>
			<li class="breadcrumb-item active text-white">Shop</li>
		</ol>
	</div>
}
<!-- Single Page Header End -->

@await Html.PartialAsync("ProductItem", Model)

<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        <a href="#" class="rounded">&laquo;</a>
        <div id="pagination-links"></div>
        <a href="#" class="rounded">&raquo;</a>
    </div>
</div>
<script>
    const totalPages = 6;
    const paginationContainer = document.getElementById('pagination-links');

    for (let i = 1; i <= totalPages; i++) {
        const link = document.createElement('a');
        link.href = "#";
        link.className = "rounded";
        link.textContent = i;

        if (i === 1) {
            link.classList.add('active');
        }

        paginationContainer.appendChild(link);
    }
</script>

